- hosts: POLYMERBOX

  pre_tasks:
    - block:
        - name: Update known public keys for remote host
          include_role:
            name: local/wsl/ssh/update-known-hosts

        - block:
            - block:
                - name: Create remote host administrator user account
                  include_role:
                    name: distro/debian/accounts/create-admin-user
                - meta: reset_connection

              vars:
                ansible_user: '{{ config_default_user_name }}'
                ansible_ssh_pass: '{{ config_default_user_pass }}'

            - block:
                - name: Delete remote host default user account
                  include_role:
                    name: distro/debian/accounts/delete-default-user

              vars:
                ansible_user: '{{ config_admin_user_name }}'
                ansible_become_pass: '{{ config_admin_user_pass }}'

          become: true

      tags:
        - bootstrap
        - never

  tasks:
    - block:
        - name: Configure base system settings and services
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/raspbian/base/configure-system
            - distro/raspbian/base/configure-testing-repository
            - distro/raspbian/base/configure-unattended-upgrades
            - distro/debian/base/configure-localization
            - distro/debian/base/configure-sshd

        - name: Upgrade distribution software and kernel
          include_role:
            name: distro/debian/base/upgrade-system

        - name: Setup 'root' user profile
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/linux/dotfiles/aliases
            - distro/linux/dotfiles/dircolors
            - distro/linux/dotfiles/inputrc
            - distro/linux/dotfiles/nanorc
            - distro/linux/dotfiles/profile
            - distro/linux/shell/switch-from-bash-to-zsh
          vars:
            config_role_user_name: root
            config_role_user_home: /root

        - name: Setup '{{ config_admin_user_name }}' user profile
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/linux/dotfiles/aliases
            - distro/linux/dotfiles/dircolors
            - distro/linux/dotfiles/inputrc
            - distro/linux/dotfiles/nanorc
            - distro/linux/dotfiles/profile
            - distro/linux/shell/switch-from-bash-to-zsh
          vars:
            config_role_user_name: '{{ config_admin_user_name }}'
            config_role_user_home: /home/{{ config_admin_user_name }}

        - name: Install core applications
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/raspbian/software/packages/acme.sh
            - distro/raspbian/software/packages/cloudflared
            - distro/raspbian/software/packages/docker
            - distro/raspbian/software/packages/postfix
            - distro/raspbian/software/packages/tailscale

        - name: Install Docker applications
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/raspbian/software/containers/traefik
            - distro/raspbian/software/containers/adguard-home
            - distro/raspbian/software/containers/authelia
            - distro/raspbian/software/containers/unifi-controller
            - distro/raspbian/software/containers/watchtower

        - name: Install additional applications
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/raspbian/software/packages/borgbackup

      vars:
        ansible_user: '{{ config_admin_user_name }}'
        ansible_become_pass: '{{ config_admin_user_pass }}'

      become: true

  post_tasks:
    - block:
        - name: Upgrade distribution and additional software
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/debian/base/upgrade-system

        - name: Upgrade Docker container applications
          include_role:
            name: '{{ item }}'
          with_items:
            - distro/raspbian/software/containers/unifi-controller

      vars:
        ansible_user: '{{ config_admin_user_name }}'
        ansible_become_pass: '{{ config_admin_user_pass }}'

      become: true

      tags:
        - upgrade
        - never
