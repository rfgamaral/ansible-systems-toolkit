http:
  routers:
    bazarr-en:
      rule: Host(`bazarr.{{ config_network_domain }}`) && PathPrefix(`/en`)
      service: bazarr-en
      middlewares:
        - chain-default
      tls: {}
    bazarr-pt:
      rule: Host(`bazarr.{{ config_network_domain }}`) && PathPrefix(`/pt`)
      service: bazarr-pt
      middlewares:
        - chain-default
      tls: {}
    dsm:
      rule: Host(`dsm.{{ config_network_domain }}`)
      service: synology-diskstation-manager
      middlewares:
        - chain-default
      tls: {}
    files:
      rule: Host(`files.{{ config_network_domain }}`)
      service: synology-file-station
      middlewares:
        - chain-default
      tls: {}
    nzbhydra2:
      rule: Host(`nzbhydra2.{{ config_network_domain }}`)
      service: nzbhydra2
      middlewares:
        - chain-default
      tls: {}
    plex:
      rule: Host(`plex.{{ config_network_domain }}`)
      service: plex
      middlewares:
        - chain-default
      tls: {}
    overseerr:
      rule: Host(`overseerr.{{ config_network_domain }}`)
      service: overseerr
      middlewares:
        - chain-default
      tls: {}
    radarr:
      rule: Host(`radarr.{{ config_network_domain }}`)
      service: radarr
      middlewares:
        - chain-default
      tls: {}
    sabnzbd:
      rule: Host(`sabnzbd.{{ config_network_domain }}`)
      service: sabnzbd
      middlewares:
        - chain-default
      tls: {}
    sonarr:
      rule: Host(`sonarr.{{ config_network_domain }}`)
      service: sonarr
      middlewares:
        - chain-default
      tls: {}
    tautulli:
      rule: Host(`tautulli.{{ config_network_domain }}`)
      service: tautulli
      middlewares:
        - chain-default
      tls: {}
    webdav:
      rule: Host(`webdav.{{ config_network_domain }}`)
      service: synology-webdav-server
      middlewares:
        - chain-default
      tls: {}
